{"ast":null,"code":"var _jsxFileName = \"/Users/alpacino/Desktop/port/client/src/context/appContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useReducer, useContext } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\nimport { CLEAR_ALERT, DISPLAY_ALERT, REGISTER_USER_BEGIN, REGISTER_USER_SUCCESS, REGISTER_USER_ERROR, LOGIN_USER_BEGIN, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR, LOGOUT_USER, FORGOT_PASSWORD_ERROR, FORGOT_PASSWORD_BEGIN, RESET_PASSWORD_BEGIN, RESET_PASSWORD_ERROR } from \"./actions\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem(\"token\");\nconst user = localStorage.getItem(\"user\");\nconst initialState = {\n  isLoading: false,\n  showAlert: false,\n  alertText: \"\",\n  alertType: \"\",\n  user: user ? JSON.parse(user) : null,\n  token: token\n};\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  // axios\n  const authFetch = axios.create({\n    baseURL: \"api/v1\"\n  });\n  authFetch.interceptors.response.use(response => {\n    return response;\n  }, error => {\n    if (error.response.status === 401) {\n      logoutUser();\n    }\n    return Promise.reject(error);\n  });\n  const displayAlert = () => {\n    dispatch({\n      type: DISPLAY_ALERT\n    });\n    clearAlert();\n  };\n  const passwordAlert = () => {\n    dispatch({\n      type: FORGOT_PASSWORD_ERROR\n    });\n    clearAlert();\n  };\n  const resetAlert = () => {\n    dispatch({\n      type: RESET_PASSWORD_ERROR\n    });\n    clearAlert();\n  };\n  const clearAlert = () => {\n    setTimeout(() => {\n      dispatch({\n        type: CLEAR_ALERT\n      });\n    }, 3000);\n  };\n  const addUserToLocalStorage = _ref2 => {\n    let {\n      user,\n      token\n    } = _ref2;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    localStorage.setItem(\"token\", token);\n  };\n  const removeUserFromLocalStorage = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  };\n  const registerUser = async currentUser => {\n    dispatch({\n      type: REGISTER_USER_BEGIN\n    });\n    try {\n      const response = await axios.post('/api/v1/auth/register', currentUser);\n      // (response);\n      const {\n        user,\n        token\n      } = response.data;\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      addUserToLocalStorage({\n        user,\n        token\n      });\n    } catch (error) {\n      // (error.response);\n      dispatch({\n        type: REGISTER_USER_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n    }\n    clearAlert();\n  };\n  const loginUser = async currentUser => {\n    dispatch({\n      type: LOGIN_USER_BEGIN\n    });\n    try {\n      const {\n        data\n      } = await axios.post('/api/v1/auth/login', currentUser);\n      const {\n        user,\n        token\n      } = data;\n      dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      addUserToLocalStorage({\n        user,\n        token\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n    }\n    clearAlert();\n  };\n  const logoutUser = async () => {\n    // await authFetch.get(\"/auth/logout\")\n    dispatch({\n      type: LOGOUT_USER\n    });\n    removeUserFromLocalStorage();\n  };\n  const forgotpassword = async forgotEmail => {\n    dispatch({\n      type: FORGOT_PASSWORD_BEGIN\n    });\n    try {\n      const response = await axios.post('/api/v1/auth/forgotpassword', forgotEmail);\n      toast.success(response.data);\n    } catch (error) {\n      toast.error(error.response.data);\n    }\n  };\n  const resetPassword = async details => {\n    dispatch({\n      type: RESET_PASSWORD_BEGIN\n    });\n    try {\n      const response = await axios.post('/api/v1/auth/updatepassword', details);\n      const {\n        status\n      } = response.data(\"see response\", status);\n    } catch (error) {\n      dispatch({\n        type: RESET_PASSWORD_ERROR,\n        payload: {\n          msg: error.response.data.msg\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      ...state,\n      displayAlert,\n      registerUser,\n      loginUser,\n      logoutUser,\n      passwordAlert,\n      forgotpassword,\n      resetPassword,\n      resetAlert\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AppProvider;\nconst useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppProvider, initialState, useAppContext };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useReducer","useContext","reducer","axios","CLEAR_ALERT","DISPLAY_ALERT","REGISTER_USER_BEGIN","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","LOGIN_USER_BEGIN","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","LOGOUT_USER","FORGOT_PASSWORD_ERROR","FORGOT_PASSWORD_BEGIN","RESET_PASSWORD_BEGIN","RESET_PASSWORD_ERROR","toast","token","localStorage","getItem","user","initialState","isLoading","showAlert","alertText","alertType","JSON","parse","AppContext","createContext","AppProvider","children","state","dispatch","authFetch","create","baseURL","interceptors","response","use","error","status","logoutUser","Promise","reject","displayAlert","type","clearAlert","passwordAlert","resetAlert","setTimeout","addUserToLocalStorage","setItem","stringify","removeUserFromLocalStorage","removeItem","registerUser","currentUser","post","data","payload","msg","loginUser","forgotpassword","forgotEmail","success","resetPassword","details","useAppContext"],"sources":["/Users/alpacino/Desktop/port/client/src/context/appContext.js"],"sourcesContent":["import React , {  useReducer, useContext } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\"\nimport { CLEAR_ALERT, DISPLAY_ALERT ,REGISTER_USER_BEGIN,REGISTER_USER_SUCCESS,REGISTER_USER_ERROR,\nLOGIN_USER_BEGIN,LOGIN_USER_SUCCESS,LOGIN_USER_ERROR, LOGOUT_USER, FORGOT_PASSWORD_ERROR, FORGOT_PASSWORD_BEGIN, RESET_PASSWORD_BEGIN,RESET_PASSWORD_ERROR} from \"./actions\"\nimport toast from \"react-hot-toast\"\n\n\nconst token = localStorage.getItem(\"token\")\nconst user = localStorage.getItem(\"user\")\n\nconst initialState = {\n    isLoading: false,\n    showAlert: false,\n    alertText: \"\",\n    alertType: \"\",\n    user: user? JSON.parse(user):null,\n    token: token,\n}\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n    // axios\n    const authFetch = axios.create({\n        baseURL: \"api/v1\",\n    })\n\n    authFetch.interceptors.response.use(\n    (response) => {\n        return response\n    },\n    (error) => {\n        if(error.response.status === 401) {\n            logoutUser()\n        }\n        return Promise.reject(error)\n    }\n    )\n\n    const displayAlert = () => {\n        dispatch({type: DISPLAY_ALERT})\n        clearAlert()\n    }\n\n    const passwordAlert = () => {\n        dispatch({type: FORGOT_PASSWORD_ERROR})\n        clearAlert()\n    }\n    const resetAlert = () => {\n        dispatch({type:  RESET_PASSWORD_ERROR})\n        clearAlert()\n    }\n\n    const clearAlert = () => {\n        setTimeout(() => {\n            dispatch({ type: CLEAR_ALERT})\n        },3000);\n    }\n\n\n\n\n\n    const addUserToLocalStorage = ({user, token, }) => {\n        localStorage.setItem(\"user\", JSON.stringify(user))\n        localStorage.setItem(\"token\", token)\n    }\n\n    const removeUserFromLocalStorage = () => {\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"user\")\n    }\n\n    const registerUser = async (currentUser) => {\n      dispatch({ type: REGISTER_USER_BEGIN })\n      try {\n        const response = await axios.post('/api/v1/auth/register', currentUser)\n        // (response);\n        const { user, token } = response.data\n        dispatch ({\n            type: REGISTER_USER_SUCCESS,\n            payload: { user, token},\n        })\n        addUserToLocalStorage({user, token})\n      } catch (error) {\n        // (error.response);\n        dispatch({\n            type: REGISTER_USER_ERROR,\n            payload: { msg: error.response.data.msg}\n        })\n      }\n      clearAlert()\n    \n    }\n\n     const loginUser = async (currentUser ) => {\n        dispatch({ type: LOGIN_USER_BEGIN })\n        try {\n          const { data  } = await axios.post('/api/v1/auth/login', currentUser)\n          const { user, token } = data\n       \n          dispatch ({\n              type: LOGIN_USER_SUCCESS,\n              payload: { user, token},\n          })\n          addUserToLocalStorage({user, token})\n        } catch (error) {\n\n          dispatch({\n              type: LOGIN_USER_ERROR,\n              payload: { msg: error.response.data.msg}\n          })\n        }\n        clearAlert()\n      \n     }\n\nconst logoutUser = async () => {\n    // await authFetch.get(\"/auth/logout\")\n    dispatch({ type: LOGOUT_USER})\n    removeUserFromLocalStorage()\n}\n\nconst forgotpassword = async (forgotEmail) => {\n\n   \n    dispatch({ type: FORGOT_PASSWORD_BEGIN })\n    try {\n        const response = await  axios.post('/api/v1/auth/forgotpassword', forgotEmail)\n        toast.success(response.data)\n        \n    } catch (error) {\n        toast.error(error.response.data)\n  \n    }\n}\n\nconst resetPassword = async (details) => {\n   \n    dispatch({ type: RESET_PASSWORD_BEGIN })\n    try {\n        const response = await  axios.post('/api/v1/auth/updatepassword', details)\n        const { status } = response.data\n        (\"see response\", status);\n        \n        \n    } catch (error) {\n    \n        dispatch({\n            type: RESET_PASSWORD_ERROR,\n            payload: { msg: error.response.data.msg}\n        })\n    }\n}\n\n\n    return (\n        <AppContext.Provider value={{ ...state , displayAlert, registerUser, loginUser,logoutUser, passwordAlert, forgotpassword, resetPassword,resetAlert }}>{children}</AppContext.Provider>\n    )\n}\n\nconst useAppContext = () => {\n    return useContext(AppContext)\n}\n\nexport {AppProvider,initialState,useAppContext}"],"mappings":"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"},"metadata":{},"sourceType":"module"}